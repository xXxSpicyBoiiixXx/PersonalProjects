#!/usr/bin/python

# FILE: TCPClient.py
# USAGE: ./TCPClient.py
# DESCRIPTION: Standard multi-threaded TCP server.  
# OPTIONS: -- 
# REQUIREMENTS: -- 
# BUGS: -- 
# AUTHOR: xXxSpicyBoiiixXx
# ORGANIZATION: -- 
# VERSION: 1.0
# CREATED: 03/06/2020
# REVISION: -- 

import socket
import threading 

bind_ip = "0.0.0.0"
bind_port = 9999

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Passing the IP address and the port we want the server to listen on
server.bind((bind_ip,bind_port))

# Setting the maximum backlog, in this case 5
server.listen(5) 

print "[*] Listening on %s:%d" % (bind_ip,bind_port)

# This is our client handling thread
# This will perform the recv() and the nsends a simple message back to the client 
def handle_client(client_socket): 

	# Print out what the client sends 
	request = client_socket.recv(1024) 

	print "[*] Recieved: %s" % request

	# Send back a packet
	client_socket.send("ACK!")

	client_socket.close()

while True: 

	client,addr = server.accept()

	print "[*] Accepted connection from: %s:%d" % (addr[0],addr[1])

	# Spin up our client thread to handle incoming data 
	client_handler = threading.Thread(target=handle_client,args=(cleint,))
	client_handler.start()
